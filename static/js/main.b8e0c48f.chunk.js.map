{"version":3,"sources":["p2-homeworks/h2/Affairs.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h3/Greeting.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","s","wrapper","avatar","src","alt","message","avatarName","name","messageText","messageTime","time","messageData","HW1","Affair","height","affair","priority","middle","colorRed","priorityRed","colorOrange","priorityOrange","stylePriority","deleteBtn","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","key","priorityBtn","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","onEnterPress","inputClass","success","value","onFocus","onChange","onKeyPress","textMistake","GreetingContainer","users","addUserCallback","setName","setError","valueNameTrim","trim","alert","length","e","currentTarget","HW3","setUsers","push","v1","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.b8e0c48f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Affairs_wrapper__3S6eE\",\"Affair\":\"Affairs_Affair__1GJZA\",\"deleteBtn\":\"Affairs_deleteBtn__CMarT\",\"priority\":\"Affairs_priority__Pf5tm\",\"name\":\"Affairs_name__1dNCK\",\"priorityBtn\":\"Affairs_priorityBtn__3TZ-Y\",\"priorityRed\":\"Affairs_priorityRed__qZbMP\",\"priorityOrange\":\"Affairs_priorityOrange__3yWjy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Message_wrapper__2uoyE\",\"avatar\":\"Message_avatar__3s-Py\",\"message\":\"Message_message__c0gHs\",\"avatarName\":\"Message_avatarName__1QG_G\",\"messageTime\":\"Message_messageTime__1-_HP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Greeting_wrapper__25Y64\",\"error\":\"Greeting_error__1tEFV\",\"textMistake\":\"Greeting_textMistake__1nzF0\",\"success\":\"Greeting_success__2qPZA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3_jkh\"};","import React from 'react'\r\nimport s from './Message.module.css'\r\n\r\ntype MessageType = {\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    time: string\r\n}\r\n\r\nfunction Message(props: MessageType) {\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <div className={s.avatar}>\r\n                <img src={props.avatar} alt=\"avatar\"/>\r\n            </div>\r\n\r\n            <div className={s.message}>\r\n                <h3 className={s.avatarName}>{props.name}</h3>\r\n                <p className={s.messageText}>{props.message}</p>\r\n                <time className={s.messageTime}>{props.time}</time>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport Message from \"./Message\";\r\n\r\nconst messageData = {\r\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n    name: 'Angel',\r\n    message: 'Hello, I\\'m Angel. How are you?',\r\n    time: '22:00',\r\n}\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 1\r\n\r\n            <hr/>\r\n\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeMessage/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW1\r\n","import React from 'react'\r\nimport { AffairType } from './HW2'\r\nimport s from './Affairs.module.css'\r\n\r\ntype AffairPropsType = {\r\n    // key не нужно типизировать\r\n    affair: AffairType \r\n    deleteAffairCallback: (_id: number) => void \r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const onDeleteAffairClick = () => props.deleteAffairCallback(props.affair._id);\r\n\r\n    const height = (props.affair.priority === 'high');\r\n    const middle = (props.affair.priority === 'middle');\r\n    const colorRed = (s.priority + ' ' + s.priorityRed);\r\n    const colorOrange = (s.priority + ' ' + s.priorityOrange);\r\n    const stylePriority = height ? colorRed : middle ? colorOrange : s.priority;\r\n\r\n    return (\r\n        <div className={s.Affair}>\r\n            <div className={s.name}>{props.affair.name}</div>\r\n            <div className={stylePriority}>[{props.affair.priority}]</div>\r\n\r\n            <button className={s.deleteBtn} onClick={onDeleteAffairClick}>X</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affair\r\n","import React from 'react'\r\nimport Affair from './Affair'\r\nimport {AffairType, FilterType} from './HW2'\r\nimport s from './Affairs.module.css'\r\n\r\ntype AffairsPropsType = {\r\n    data: AffairType[]\r\n    setFilter: (filter: FilterType) => void\r\n    deleteAffairCallback: (_id: number) => void\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n    const mappedAffairs = props.data.map((a: AffairType) => (\r\n        <Affair // should work\r\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    const setAll = () => props.setFilter('all');\r\n    const setHigh = () => props.setFilter('high');\r\n    const setMiddle = () => props.setFilter('middle');\r\n    const setLow = () => props.setFilter('low');\r\n\r\n    return (\r\n        <div>\r\n\r\n            {mappedAffairs}\r\n\r\n            <button className={s.priorityBtn} onClick={setAll}>All</button>\r\n            <button className={s.priorityBtn} onClick={setHigh}>High</button>\r\n            <button className={s.priorityBtn} onClick={setMiddle}>Middle</button>\r\n            <button className={s.priorityBtn} onClick={setLow}>Low</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affairs\r\n","import React, {useState} from 'react'\r\nimport Affairs from './Affairs'\r\nimport s from './Affairs.module.css'\r\n\r\n// types\r\nexport type AffairPriorityType = 'high' | 'low' | 'middle'\r\nexport type AffairType = {\r\n    _id: number\r\n    name: string\r\n    priority: AffairPriorityType\r\n}\r\n\r\nexport type FilterType = 'all' | AffairPriorityType\r\n\r\n// constants\r\nconst defaultAffairs: AffairType[] = [\r\n    {_id: 1, name: 'React', priority: 'high'},\r\n    {_id: 2, name: 'anime', priority: 'low'},\r\n    {_id: 3, name: 'games', priority: 'low'},\r\n    {_id: 4, name: 'work', priority: 'high'},\r\n    {_id: 5, name: 'html & css', priority: 'middle'},\r\n];\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: AffairType[], filter: FilterType): AffairType[] => {\r\n    if (filter === 'all') return affairs;\r\n    else return affairs.filter(a => a.priority === filter);\r\n}\r\nexport const deleteAffair = (affairs: AffairType[], _id: number): AffairType[] => {\r\n    let filteredAffairs = affairs.filter(a => a._id !== _id);\r\n    return filteredAffairs;\r\n}\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<AffairType[]>(defaultAffairs);\r\n    const [filter, setFilter] = useState<FilterType>('all');\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter);\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id));\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 2\r\n            <hr/>\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW2\r\n","import React, {KeyboardEvent, FocusEvent} from 'react'\r\nimport s from './Greeting.module.css'\r\n\r\ntype GreetingPropsType = {\r\n    name: string // need to fix any\r\n    setNameCallback: (name: FocusEvent<HTMLInputElement>) => void // need to fix any\r\n    onEnterPress: (name: KeyboardEvent<HTMLInputElement>) => void\r\n    addUser: () => void // need to fix any\r\n    error: string // need to fix any\r\n    totalUsers: number // need to fix any\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, error, totalUsers, onEnterPress} // деструктуризация пропсов\r\n) => {\r\n    const inputClass = name ? s.success : s.error // need to fix with (?:)\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n\r\n            <input value={name}\r\n                   onFocus={setNameCallback}\r\n                   onChange={setNameCallback}\r\n                   className={inputClass}\r\n                   onKeyPress={onEnterPress}\r\n            />\r\n            <div className={s.textMistake}>{error}</div>\r\n\r\n\r\n            <button onClick={addUser}>add</button>\r\n            <span>{totalUsers}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Greeting\r\n","import React, {useState, KeyboardEvent, FocusEvent} from 'react'\r\nimport Greeting from './Greeting'\r\nimport {UserType} from './HW3'\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: UserType[] // need to fix any\r\n    addUserCallback: (name: string) => void // need to fix any\r\n}\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\r\n    const [name, setName] = useState<string>('') // need to fix any\r\n    const [error, setError] = useState<string>('') // need to fix any\r\n\r\n    const setNameCallback = (e: FocusEvent<HTMLInputElement>) => { // need to fix any\r\n        setName(e.currentTarget.value)\r\n        setError('')\r\n    }\r\n\r\n    const addUser = () => {\r\n        const valueNameTrim = name.trim()\r\n\r\n        if(valueNameTrim) {\r\n            addUserCallback(valueNameTrim)\r\n            alert(`Hello  ${valueNameTrim}!`)\r\n\r\n        } else{\r\n            setError('Enter text')\r\n        }\r\n\r\n        setName('')\r\n    }\r\n    const onEnterPress = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if(e.key === 'Enter') addUser()\r\n    }\r\n\r\n    const totalUsers = users.length // need to fix\r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n            onEnterPress={onEnterPress}\r\n        />\r\n    )\r\n}\r\n\r\nexport default GreetingContainer\r\n","import React, {useState} from 'react'\r\nimport {v1} from 'uuid'\r\nimport GreetingContainer from './GreetingContainer'\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string // need to fix any\r\n    name: string // need to fix any\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<UserType[]>([]) // need to fix any\r\n\r\n    const addUserCallback = (name: string) => { // need to fix any\r\n        users.push({_id: v1(), name})\r\n\r\n        setUsers(users) // need to fix\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 3\r\n            <hr/>\r\n            {/*should work (должно работать)*/}\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW3\r\n\r\n","import React from 'react'\r\nimport s from './App.module.css'\r\nimport HW1 from '../../../p2-homeworks/h1/HW1'\r\nimport HW2 from '../../../p2-homeworks/h2/HW2'\r\nimport HW3 from '../../../p2-homeworks/h3/HW3'\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>react homeworks:</div>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            {/*<HW4/>*/}\r\n            {/*<HW5/>*/}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}